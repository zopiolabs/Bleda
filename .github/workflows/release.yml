name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run type-check

      - name: Build project
        run: |
          export BASE_URL="/${{ github.event.repository.name }}/"
          npm run build

      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-version-file: false
          skip-on-empty: false
          git-push: false

      - name: Push changes
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          git push origin main --follow-tags || echo "Push failed, possibly due to existing tag"

      - name: Create game bundle
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          cd dist
          zip -r ../bleda-game-${{ steps.changelog.outputs.tag }}.zip .
          cd ..

      - name: Create Release with Asset
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.changelog.outputs.tag }} \
            --title "${{ steps.changelog.outputs.tag }}" \
            --notes "${{ steps.changelog.outputs.clean_changelog }}" \
            ./bleda-game-${{ steps.changelog.outputs.tag }}.zip

  deploy-production:
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: |
          export BASE_URL="/${{ github.event.repository.name }}/"
          npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4